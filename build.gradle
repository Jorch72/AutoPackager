import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "Mobius Repo"
        url = "http://mobiusstrip.eu/maven"
    }
}


version = "1.6.2"
group= "org.mcupdater.autopackager" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "autopackager"

minecraft {
	version = "1.9.4-12.17.0.1954"
    runDir = "run"
    mappings = "snapshot_20160518"
}

dependencies {
    //compile files("lib/CoFHLib-[1.7.10]1.0.3-175-dev.jar")
    //compile "codechicken:CodeChickenLib:1.7.10-1.1.3.136:dev"
    //compile "codechicken:CodeChickenCore:1.7.10-1.0.6.43:dev"
    //compile "codechicken:NotEnoughItems:1.7.10-1.0.4.105:dev"
    compile "mcp.mobius.waila:Waila:1.7.0-B3_1.9.4:dev"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        filter(ReplaceTokens, tokens: [version: project.version, mcversion: project.minecraft.version])
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
